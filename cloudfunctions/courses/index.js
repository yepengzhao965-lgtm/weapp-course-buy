const cloud=require('wx-server-sdk'); cloud.init({ env:cloud.DYNAMIC_CURRENT_ENV }); const db=cloud.database(); const courses=db.collection('courses'); async function seed(){ const count=await courses.count(); if(count.total>0) return { ok:true, seeded:false }; const demo=[ { title:'Vue3 从入门到实战', subtitle:'30 小时体系课', price:19900, cover:'https://img.cdn.fir.ai/u/cover-vue3.jpg', description:'覆盖组合式 API / 路由 / Pinia / 工程化…' }, { title:'React18 全栈开发', subtitle:'Next.js + Prisma', price:29900, cover:'https://img.cdn.fir.ai/u/cover-react.jpg', description:'从前端到后端，手把手上线生产应用…' }, { title:'小程序商业实战', subtitle:'支付/订单/权限', price:9900, cover:'https://img.cdn.fir.ai/u/cover-miniprogram.jpg', description:'对接微信支付、订单流转、用户体系…' } ]; const batch=demo.map(d=>({ ...d, createdAt:new Date(), updatedAt:new Date() })); await Promise.all(batch.map(d=>courses.add({ data:d }))); return { ok:true, seeded:true } } exports.main=async(event)=>{ const action=event&&event.action; if(action==='seed') return await seed(); if(action==='list'){ const r=await courses.orderBy('createdAt','desc').get(); return { list:r.data } } if(action==='get'&&event&&event.id){ const r=await courses.doc(event.id).get(); return { course:r.data } } return { ok:false, msg:'unknown action' } }
